name: Build, push and deploy - master push CI & CD
on:
  push:
    branches:
      - master

jobs:
  dependencies:
    name: Install dependencies
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - run: npm ci
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-cache-node_modules-${{ hashFiles('**/package-lock.json') }}

  build:
    name: Bundle build
    runs-on: ubuntu-20.04
    needs: dependencies
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-cache-node_modules-${{ hashFiles('**/package-lock.json') }}
      - run: npm run build
      - uses: actions/upload-artifact@v2
        with:
          name: rasseki-build
          path: build
          retention-days: 1

  docker:
    name: Building and pushing docker image to ghcr.io
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: rasseki-build
          path: build
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: echo "package_version=$(awk -F\" '/version/{print $4}' package.json)" >> $GITHUB_ENV
      - uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          tags: |
            ghcr.io/stanf0rd/rasseki-game:latest
            ghcr.io/stanf0rd/rasseki-game:${{ env.package_version }}

  deploy:
    name: Deploy test
    needs: docker
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: echo "package_version=$(awk -F\" '/version/{print $4}' package.json)" >> $GITHUB_ENV
      - run: |
          sed 's/__APP_IMAGE__/ghcr.io\/stanf0rd\/rasseki-game:${{ env.package_version }}/' \
          deploy/docker-compose.yml > deploy/docker-compose.temp.yml
      - run: mv deploy/docker-compose.temp.yml deploy/docker-compose.yml
      - run: install -b -m 600 /dev/null key
      - run: 'echo "$SSH_KEY" > key'
        env:
          SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
      - run: |
          rsync -avzr --delete -e "ssh -o StrictHostKeyChecking=no -i ./key" \
          deploy/* ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_PATH }}
      - run: |
          ssh -i ./key ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} \
          "cd ${{ secrets.DEPLOY_PATH }}; docker-compose up -d --remove-orphans"
